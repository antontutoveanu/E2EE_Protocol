package main

import (
	"bufio"
	"crypto/aes"
	"crypto/cipher"
	"crypto/rand"
	"encoding/base64"
	"fmt"
	"io"
	"io/ioutil"
	"log"
	"os"
	"time"

	kyberk2so "github.com/symbolicsoft/kyber-k2so"
)

func main() {

	MASTER_KEY := [32]byte{48, 124, 87, 188, 181, 244, 165, 54, 249, 79, 112, 76, 201, 137, 208, 20, 14, 79, 102, 56, 19, 51, 125, 166, 52, 49, 19, 37, 194, 15, 99, 168}
	SECRET_KEY := [3168]byte{96, 26, 45, 251, 178, 26, 244, 4, 130, 242, 177, 115, 132, 83, 92, 33, 105, 21, 44, 247, 158, 203, 92, 122, 223, 144, 101, 141, 59, 115, 122, 82, 51, 238,
		104, 169, 97, 101, 101, 35, 215, 0, 242, 17, 95, 227, 21, 50, 57, 34, 98, 153, 180, 160, 218, 197, 96, 11, 115, 171, 34, 36, 18, 255, 28, 154, 27, 154, 116, 143, 84, 155, 8,
		144, 45, 106, 119, 69, 160, 155, 158, 250, 75, 64, 183, 90, 55, 183, 44, 182, 234, 177, 132, 184, 65, 163, 86, 115, 144, 195, 168, 98, 37, 22, 80, 243, 243, 194, 175, 230, 185,
		252, 170, 53, 216, 245, 8, 65, 8, 109, 38, 85, 86, 18, 203, 53, 80, 38, 74, 183, 87, 144, 161, 216, 60, 22, 101, 113, 166, 89, 190, 156, 56, 88, 22, 250, 93, 203, 116, 24, 174,
		170, 106, 186, 86, 90, 190, 20, 164, 100, 133, 187, 0, 85, 147, 212, 70, 54, 134, 218, 59, 55, 92, 207, 11, 17, 52, 93, 202, 96, 201, 121, 33, 55, 68, 77, 3, 17, 121, 229, 198,
		7, 153, 116, 111, 162, 43, 114, 246, 26, 196, 187, 170, 67, 15, 38, 60, 21, 201, 138, 216, 236, 85, 55, 187, 20, 99, 135, 133, 93, 250, 33, 155, 20, 55, 184, 100, 151, 90, 85,
		104, 71, 247, 125, 225, 11, 144, 37, 1, 82, 152, 130, 195, 22, 99, 135, 151, 166, 9, 12, 49, 85, 105, 162, 145, 191, 10, 39, 177, 55, 70, 57, 140, 164, 222, 240, 62, 65, 218,
		21, 66, 147, 69, 235, 112, 75, 223, 193, 142, 219, 246, 37, 13, 82, 88, 89, 128, 155, 98, 181, 12, 170, 171, 26, 174, 116, 54, 229, 169, 178, 8, 96, 184, 50, 56, 107, 156, 243,
		31, 214, 100, 133, 220, 84, 31, 40, 144, 129, 240, 251, 164, 110, 16, 0, 19, 235, 38, 97, 116, 127, 234, 21, 166, 37, 102, 182, 78, 123, 163, 64, 219, 44, 140, 204, 34, 199, 240,
		143, 234, 73, 193, 78, 36, 188, 136, 7, 151, 98, 9, 156, 253, 122, 36, 178, 38, 108, 78, 129, 103, 50, 135, 160, 244, 98, 15, 149, 201, 160, 140, 209, 29, 0, 48, 66, 214, 146, 57,
		6, 217, 134, 134, 0, 20, 22, 118, 32, 125, 70, 7, 162, 75, 165, 171, 211, 109, 249, 33, 121, 255, 11, 177, 111, 193, 20, 134, 102, 206, 113, 65, 115, 119, 60, 25, 97, 220, 109,
		164, 115, 126, 127, 149, 92, 150, 74, 119, 26, 153, 94, 100, 220, 35, 181, 227, 174, 40, 152, 174, 186, 55, 1, 95, 91, 116, 141, 83, 1, 139, 176, 157, 114, 67, 7, 133, 7, 66, 206,
		80, 11, 138, 219, 160, 201, 168, 91, 129, 122, 193, 147, 56, 33, 159, 133, 144, 73, 57, 29, 29, 232, 116, 148, 139, 158, 248, 213, 165, 115, 25, 6, 83, 88, 167, 229, 144, 199, 94,
		151, 3, 3, 148, 203, 125, 102, 31, 94, 217, 7, 134, 108, 159, 249, 42, 185, 24, 67, 28, 72, 119, 191, 97, 135, 24, 33, 215, 90, 119, 204, 118, 177, 105, 136, 32, 67, 70, 200, 38,
		6, 109, 154, 69, 146, 53, 156, 19, 215, 109, 229, 9, 75, 101, 102, 44, 39, 230, 172, 30, 23, 43, 17, 232, 198, 165, 235, 168, 122, 48, 93, 165, 134, 50, 179, 132, 22, 117, 114, 46,
		39, 220, 24, 136, 80, 86, 218, 208, 168, 84, 218, 159, 34, 149, 76, 128, 28, 60, 70, 193, 117, 6, 118, 124, 109, 42, 135, 139, 241, 196, 93, 147, 171, 211, 56, 192, 3, 49, 133, 227,
		70, 16, 74, 168, 85, 1, 164, 53, 115, 129, 43, 174, 55, 16, 151, 74, 25, 97, 219, 33, 161, 36, 199, 245, 198, 202, 156, 101, 181, 35, 170, 29, 144, 172, 189, 196, 194, 109, 252,
		227, 193, 23, 24, 142, 34, 186, 195, 97, 11, 26, 87, 22, 165, 57, 117, 126, 253, 37, 141, 23, 228, 193, 147, 73, 106, 30, 58, 143, 30, 122, 109, 141, 57, 83, 11, 185, 93, 79, 3,
		141, 137, 48, 37, 172, 85, 48, 120, 234, 60, 178, 68, 75, 1, 117, 207, 251, 8, 64, 124, 123, 78, 163, 24, 126, 135, 38, 99, 11, 130, 156, 157, 248, 40, 159, 98, 177, 31, 67, 163,
		151, 48, 128, 160, 124, 164, 237, 23, 47, 116, 167, 111, 6, 165, 97, 154, 102, 132, 229, 21, 84, 121, 196, 55, 118, 56, 3, 26, 82, 79, 77, 5, 133, 246, 152, 184, 183, 1, 4, 9, 73,
		85, 112, 246, 185, 207, 81, 199, 185, 165, 107, 117, 252, 149, 121, 88, 107, 73, 99, 162, 78, 210, 9, 138, 72, 60, 54, 19, 95, 97, 100, 183, 189, 245, 152, 230, 58, 27, 97, 195,
		177, 131, 22, 128, 175, 118, 12, 98, 199, 190, 189, 90, 48, 207, 166, 0, 126, 133, 135, 52, 96, 156, 126, 106, 174, 32, 225, 65, 80, 132, 82, 177, 0, 146, 173, 75, 81, 35, 56, 82,
		171, 82, 117, 10, 72, 148, 182, 100, 194, 70, 213, 76, 58, 240, 24, 198, 228, 195, 106, 118, 4, 244, 5, 193, 221, 196, 115, 86, 119, 76, 8, 64, 88, 24, 245, 101, 130, 245, 127,
		164, 179, 178, 90, 203, 40, 98, 234, 69, 191, 252, 19, 250, 183, 79, 120, 202, 184, 198, 101, 36, 235, 99, 22, 237, 130, 1, 242, 80, 159, 217, 252, 120, 34, 26, 102, 40, 87, 83,
		83, 39, 172, 113, 150, 201, 3, 36, 101, 235, 113, 126, 111, 20, 169, 95, 108, 160, 54, 165, 122, 88, 88, 102, 76, 123, 171, 73, 180, 122, 228, 43, 156, 150, 182, 202, 211, 48,
		168, 156, 103, 116, 213, 133, 30, 173, 33, 111, 37, 162, 142, 42, 87, 89, 90, 250, 60, 131, 12, 5, 166, 18, 113, 242, 71, 148, 142, 70, 98, 66, 152, 72, 124, 10, 181, 250, 57,
		124, 243, 123, 66, 28, 139, 199, 104, 1, 20, 144, 204, 73, 148, 21, 154, 179, 177, 124, 144, 50, 127, 161, 44, 129, 253, 179, 112, 123, 236, 25, 137, 44, 177, 251, 139, 190, 213,
		140, 92, 32, 89, 181, 224, 228, 141, 9, 246, 5, 230, 245, 4, 108, 248, 109, 83, 152, 11, 192, 64, 199, 149, 201, 27, 129, 33, 185, 6, 83, 146, 16, 148, 47, 145, 90, 173, 198, 202,
		23, 160, 247, 111, 85, 214, 26, 23, 16, 157, 98, 156, 3, 207, 216, 143, 99, 245, 132, 146, 1, 128, 218, 98, 151, 255, 131, 58, 16, 4, 199, 219, 204, 74, 7, 104, 130, 58, 224, 5,
		230, 60, 32, 44, 88, 12, 25, 108, 195, 195, 200, 49, 37, 49, 103, 60, 28, 207, 197, 128, 39, 230, 183, 123, 111, 75, 16, 75, 219, 63, 248, 201, 176, 239, 103, 41, 182, 122, 40,
		14, 244, 110, 172, 88, 85, 3, 145, 47, 167, 28, 146, 12, 219, 132, 208, 213, 79, 160, 204, 107, 134, 166, 189, 135, 36, 114, 94, 43, 80, 68, 23, 136, 235, 60, 85, 157, 53, 79,
		148, 55, 94, 249, 227, 41, 71, 90, 122, 45, 181, 14, 151, 38, 54, 149, 147, 190, 171, 25, 51, 179, 210, 33, 177, 129, 197, 153, 49, 143, 11, 74, 202, 211, 147, 22, 251, 224,
		32, 168, 28, 162, 151, 182, 153, 213, 85, 2, 140, 120, 40, 177, 240, 39, 167, 82, 68, 137, 80, 67, 51, 148, 8, 204, 150, 0, 112, 210, 74, 252, 179, 3, 41, 155, 53, 130, 112,
		174, 96, 197, 150, 109, 224, 163, 27, 88, 108, 42, 112, 8, 2, 48, 101, 14, 171, 203, 108, 121, 134, 123, 9, 164, 205, 212, 85, 234, 226, 140, 175, 213, 60, 94, 236, 188, 189,
		215, 29, 71, 164, 35, 93, 117, 197, 175, 236, 136, 138, 2, 177, 145, 38, 80, 78, 28, 205, 185, 124, 101, 205, 113, 189, 65, 144, 68, 100, 148, 203, 223, 22, 119, 130, 218, 0,
		182, 119, 28, 218, 208, 180, 83, 37, 156, 172, 115, 32, 113, 97, 76, 20, 119, 42, 174, 246, 115, 12, 82, 141, 133, 36, 206, 147, 131, 193, 135, 41, 166, 67, 121, 103, 193, 42,
		54, 128, 26, 185, 37, 96, 40, 90, 235, 40, 237, 7, 9, 115, 26, 166, 107, 58, 120, 196, 19, 133, 108, 119, 24, 73, 242, 205, 100, 177, 133, 2, 164, 179, 218, 215, 54, 14,
		180, 73, 238, 146, 31, 163, 179, 90, 131, 219, 109, 249, 102, 126, 166, 250, 97, 126, 177, 176, 47, 167, 58, 96, 217, 52, 173, 148, 64, 231, 244, 102, 116, 83, 29, 253,
		188, 80, 220, 122, 5, 6, 5, 72, 13, 201, 134, 124, 42, 58, 232, 8, 126, 11, 24, 73, 205, 28, 92, 170, 162, 182, 116, 136, 175, 184, 106, 101, 56, 118, 159, 70, 65, 123, 177,
		36, 189, 200, 11, 196, 123, 194, 65, 127, 121, 151, 126, 204, 105, 158, 87, 0, 46, 170, 89, 43, 248, 36, 15, 83, 78, 166, 208, 116, 85, 80, 16, 210, 7, 81, 22, 81, 81,
		190, 250, 86, 232, 197, 39, 47, 129, 22, 71, 19, 63, 8, 58, 42, 30, 119, 96, 95, 91, 83, 174, 176, 28, 214, 179, 132, 225, 73, 117, 149, 137, 127, 71, 23, 61, 212, 139,
		64, 234, 183, 172, 64, 16, 137, 193, 26, 78, 97, 117, 39, 108, 153, 123, 190, 188, 92, 53, 241, 197, 109, 155, 48, 91, 42, 82, 159, 147, 196, 231, 102, 154, 144, 201, 133,
		116, 234, 95, 108, 88, 17, 129, 219, 187, 63, 247, 152, 199, 27, 172, 234, 39, 60, 179, 156, 76, 186, 17, 23, 36, 153, 124, 203, 204, 14, 99, 185, 144, 187, 6, 165, 56,
		39, 117, 28, 66, 14, 185, 196, 174, 180, 176, 178, 101, 197, 128, 178, 249, 147, 71, 84, 184, 169, 124, 133, 176, 216, 141, 186, 162, 138, 136, 49, 56, 75, 82, 3, 194,
		21, 20, 217, 136, 176, 234, 116, 9, 252, 243, 39, 51, 226, 79, 136, 23, 201, 113, 183, 182, 91, 2, 56, 170, 27, 195, 140, 57, 170, 89, 43, 187, 214, 162, 28, 221, 103,
		70, 102, 203, 59, 228, 133, 70, 208, 220, 117, 63, 98, 160, 249, 135, 101, 94, 115, 107, 249, 59, 156, 168, 246, 165, 96, 241, 74, 234, 150, 80, 94, 146, 72, 54, 166,
		100, 105, 227, 117, 111, 252, 62, 71, 36, 48, 219, 139, 187, 175, 91, 31, 213, 1, 47, 216, 118, 88, 219, 198, 118, 51, 123, 87, 143, 138, 150, 84, 12, 122, 161, 44, 59,
		245, 219, 147, 106, 16, 117, 198, 34, 189, 45, 20, 81, 78, 246, 91, 44, 84, 142, 180, 119, 43, 141, 100, 151, 157, 132, 80, 99, 148, 63, 17, 85, 35, 17, 178, 38, 152,
		7, 198, 37, 137, 179, 94, 172, 145, 140, 169, 1, 108, 8, 43, 19, 104, 187, 251, 136, 181, 208, 170, 55, 94, 9, 76, 94, 133, 200, 178, 12, 173, 174, 10, 133, 176, 192,
		68, 39, 167, 90, 202, 64, 93, 51, 137, 132, 171, 22, 110, 71, 185, 181, 238, 214, 85, 208, 51, 135, 65, 37, 203, 20, 167, 82, 196, 33, 31, 239, 118, 81, 179, 220, 79,
		40, 184, 177, 53, 84, 48, 91, 154, 196, 52, 243, 153, 161, 139, 206, 58, 84, 146, 253, 165, 204, 6, 66, 105, 228, 214, 48, 89, 59, 75, 69, 42, 81, 56, 48, 147, 96, 97,
		94, 246, 33, 112, 67, 68, 13, 168, 161, 84, 225, 215, 38, 80, 60, 171, 78, 118, 142, 46, 56, 115, 105, 166, 42, 27, 57, 6, 152, 4, 1, 94, 22, 189, 61, 242, 86, 93,
		217, 168, 33, 17, 102, 150, 245, 142, 210, 88, 159, 12, 217, 139, 71, 200, 36, 78, 226, 142, 120, 210, 28, 123, 227, 50, 191, 101, 24, 104, 169, 145, 46, 72, 172, 202,
		196, 26, 98, 182, 194, 132, 186, 45, 104, 23, 132, 106, 105, 43, 157, 165, 64, 125, 185, 129, 56, 179, 57, 121, 68, 151, 236, 146, 122, 50, 122, 133, 164, 160, 182,
		111, 0, 205, 147, 122, 84, 128, 35, 128, 221, 5, 30, 145, 184, 112, 15, 147, 115, 153, 8, 118, 4, 182, 161, 80, 147, 96, 70, 11, 29, 115, 251, 184, 234, 212, 114, 29,
		104, 185, 180, 186, 171, 150, 92, 37, 211, 11, 177, 223, 161, 140, 99, 120, 27, 175, 75, 148, 167, 152, 36, 191, 152, 62, 139, 41, 114, 56, 212, 142, 194, 116, 141,
		139, 224, 109, 202, 166, 197, 83, 21, 116, 97, 98, 37, 158, 219, 61, 195, 57, 53, 71, 32, 154, 155, 123, 147, 66, 44, 173, 69, 123, 101, 71, 107, 7, 197, 215, 14,
		152, 160, 98, 204, 106, 141, 140, 241, 176, 23, 64, 9, 112, 153, 1, 63, 9, 29, 235, 224, 137, 93, 182, 39, 131, 21, 14, 202, 166, 150, 207, 23, 207, 146, 228, 38,
		87, 236, 159, 250, 98, 175, 199, 67, 50, 5, 118, 88, 128, 231, 148, 104, 151, 118, 107, 231, 30, 79, 44, 12, 95, 2, 110, 39, 242, 91, 46, 83, 157, 13, 135, 133, 78,
		154, 91, 122, 76, 126, 155, 169, 205, 63, 52, 154, 150, 178, 184, 250, 103, 80, 184, 67, 102, 152, 227, 59, 170, 83, 70, 188, 27, 50, 208, 16, 191, 238, 66, 134,
		8, 108, 17, 222, 161, 198, 180, 149, 8, 228, 163, 109, 251, 181, 105, 102, 243, 90, 191, 50, 116, 92, 103, 74, 185, 153, 105, 155, 129, 52, 228, 67, 23, 227, 133,
		15, 244, 236, 30, 176, 112, 85, 88, 49, 199, 227, 82, 183, 113, 121, 135, 137, 224, 145, 189, 231, 118, 72, 244, 77, 101, 53, 154, 137, 163, 189, 165, 165, 83, 108,
		154, 183, 139, 186, 37, 70, 167, 0, 255, 11, 202, 126, 88, 186, 175, 102, 185, 224, 50, 150, 229, 199, 51, 206, 211, 111, 88, 209, 171, 63, 124, 192, 91, 193, 112,
		149, 183, 31, 183, 65, 112, 14, 131, 152, 181, 169, 49, 41, 242, 151, 87, 32, 198, 32, 50, 149, 168, 70, 142, 171, 160, 181, 78, 247, 103, 13, 104, 72, 177, 80, 24,
		241, 150, 200, 24, 130, 24, 194, 117, 148, 4, 68, 51, 2, 198, 188, 30, 55, 44, 255, 151, 125, 138, 128, 193, 237, 119, 12, 138, 22, 108, 230, 201, 152, 212, 216, 118,
		188, 86, 96, 222, 24, 18, 76, 56, 51, 235, 105, 55, 195, 38, 176, 94, 177, 22, 9, 135, 11, 254, 149, 192, 95, 230, 26, 249, 217, 75, 64, 117, 11, 142, 66, 83, 70, 118,
		71, 122, 171, 148, 193, 138, 81, 180, 219, 111, 92, 168, 113, 13, 34, 187, 70, 211, 170, 109, 150, 158, 166, 11, 108, 13, 185, 106, 235, 67, 185, 107, 98, 62, 245, 202,
		73, 7, 168, 92, 112, 219, 45, 202, 60, 197, 45, 10, 194, 45, 50, 51, 171, 12, 200, 124, 192, 44, 226, 124, 90, 194, 179, 185, 12, 226, 139, 49, 216, 206, 59, 181, 205, 3,
		131, 136, 179, 81, 120, 27, 51, 97, 199, 213, 196, 22, 82, 62, 13, 160, 99, 3, 228, 99, 251, 91, 118, 200, 144, 40, 126, 197, 130, 125, 202, 153, 16, 144, 184, 87, 97, 173,
		91, 1, 141, 177, 12, 34, 190, 128, 123, 162, 146, 45, 155, 128, 70, 130, 139, 153, 240, 177, 68, 144, 192, 138, 149, 43, 85, 251, 217, 198, 181, 97, 21, 124, 153, 155, 61,
		155, 8, 189, 154, 42, 95, 33, 203, 64, 21, 207, 250, 155, 158, 97, 69, 169, 67, 49, 23, 216, 165, 108, 180, 11, 79, 32, 234, 45, 248, 166, 189, 224, 76, 130, 183, 107, 66,
		199, 34, 106, 35, 247, 33, 204, 67, 153, 195, 177, 147, 130, 104, 152, 67, 201, 4, 60, 145, 64, 61, 116, 170, 143, 196, 3, 45, 214, 93, 228, 133, 203, 143, 197, 41, 155,
		226, 124, 138, 140, 135, 254, 131, 1, 9, 146, 124, 152, 171, 34, 100, 185, 175, 24, 163, 178, 157, 102, 12, 226, 212, 180, 106, 7, 208, 199, 150, 98, 150, 192, 164, 203,
		123, 27, 166, 57, 175, 64, 218, 104, 90, 169, 144, 101, 69, 193, 118, 87, 44, 180, 21, 19, 153, 69, 89, 157, 241, 11, 166, 90, 164, 146, 130, 193, 166, 54, 133, 91, 105,
		41, 110, 199, 6, 91, 23, 55, 76, 161, 57, 218, 81, 11, 39, 64, 195, 183, 76, 158, 170, 188, 0, 112, 220, 174, 177, 40, 84, 63, 107, 196, 100, 178, 187, 25, 108, 96, 14,
		122, 150, 216, 227, 117, 20, 55, 60, 161, 20, 178, 30, 122, 169, 69, 50, 29, 14, 68, 116, 194, 225, 201, 77, 212, 155, 70, 71, 190, 57, 119, 90, 111, 134, 117, 235, 235,
		36, 217, 251, 76, 219, 209, 181, 208, 247, 172, 104, 35, 4, 5, 140, 15, 227, 1, 204, 87, 211, 62, 107, 42, 190, 189, 87, 32, 207, 52, 206, 200, 241, 124, 91, 34, 202, 148,
		4, 100, 56, 252, 148, 129, 137, 162, 143, 53, 140, 2, 128, 152, 151, 59, 125, 53, 217, 86, 185, 18, 82, 208, 39, 46, 73, 147, 83, 7, 24, 36, 166, 5, 77, 127, 186, 137, 27,
		5, 20, 36, 161, 19, 132, 69, 76, 167, 210, 133, 128, 28, 189, 86, 35, 175, 71, 215, 90, 169, 212, 16, 243, 229, 39, 178, 34, 8, 216, 81, 104, 132, 184, 16, 138, 10, 166,
		190, 114, 117, 237, 7, 31, 199, 20, 55, 176, 69, 80, 183, 185, 119, 120, 8, 197, 145, 211, 21, 155, 91, 65, 156, 246, 58, 153, 122, 198, 118, 99, 25, 173, 180, 83, 11,
		225, 38, 51, 204, 105, 83, 153, 174, 60, 67, 92, 135, 208, 122, 14, 54, 38, 232, 12, 42, 35, 40, 141, 46, 100, 91, 144, 71, 74, 254, 186, 199, 61, 167, 175, 77, 86, 205,
		95, 80, 146, 23, 44, 82, 180, 16, 8, 35, 121, 87, 202, 196, 192, 36, 29, 134, 80, 204, 108, 224, 179, 141, 204, 204, 251, 146, 161, 162, 120, 164, 208, 28, 14, 196, 9, 19,
		107, 225, 189, 255, 141, 20, 66, 36, 174, 249, 193, 63, 165, 94, 15, 5, 2, 230, 137, 230, 237, 186, 109, 198, 208, 148, 183, 95, 200, 240, 226, 51, 16, 241, 48, 225, 201,
		74, 207, 101, 180, 13, 44, 67, 105, 147, 179, 61, 24, 92, 92, 165, 112, 74, 178, 152, 128, 198, 112, 204, 78, 210, 236, 202}
	/*
		PUBLIC_KEY := [1568]byte{46, 170, 89, 43, 248, 36, 15, 83, 78, 166, 208, 116, 85, 80, 16, 210, 7, 81, 22, 81, 81, 190, 250, 86, 232, 197, 39, 47, 129, 22, 71, 19, 63, 8, 58, 42, 30, 119, 96, 95,
		91, 83, 174, 176, 28, 214, 179, 132, 225, 73, 117, 149, 137, 127, 71, 23, 61, 212, 139, 64, 234, 183, 172, 64, 16, 137, 193, 26, 78, 97, 117, 39, 108, 153, 123, 190, 188, 92, 53, 241,
		197, 109, 155, 48, 91, 42, 82, 159, 147, 196, 231, 102, 154, 144, 201, 133, 116, 234, 95, 108, 88, 17, 129, 219, 187, 63, 247, 152, 199, 27, 172, 234, 39, 60, 179, 156, 76, 186, 17, 23,
		36, 153, 124, 203, 204, 14, 99, 185, 144, 187, 6, 165, 56, 39, 117, 28, 66, 14, 185, 196, 174, 180, 176, 178, 101, 197, 128, 178, 249, 147, 71, 84, 184, 169, 124, 133, 176, 216, 141, 186,
		162, 138, 136, 49, 56, 75, 82, 3, 194, 21, 20, 217, 136, 176, 234, 116, 9, 252, 243, 39, 51, 226, 79, 136, 23, 201, 113, 183, 182, 91, 2, 56, 170, 27, 195, 140, 57, 170, 89, 43, 187, 214,
		162, 28, 221, 103, 70, 102, 203, 59, 228, 133, 70, 208, 220, 117, 63, 98, 160, 249, 135, 101, 94, 115, 107, 249, 59, 156, 168, 246, 165, 96, 241, 74, 234, 150, 80, 94, 146, 72, 54, 166,
		100, 105, 227, 117, 111, 252, 62, 71, 36, 48, 219, 139, 187, 175, 91, 31, 213, 1, 47, 216, 118, 88, 219, 198, 118, 51, 123, 87, 143, 138, 150, 84, 12, 122, 161, 44, 59, 245, 219, 147,
		106, 16, 117, 198, 34, 189, 45, 20, 81, 78, 246, 91, 44, 84, 142, 180, 119, 43, 141, 100, 151, 157, 132, 80, 99, 148, 63, 17, 85, 35, 17, 178, 38, 152, 7, 198, 37, 137, 179, 94, 172, 145,
		140, 169, 1, 108, 8, 43, 19, 104, 187, 251, 136, 181, 208, 170, 55, 94, 9, 76, 94, 133, 200, 178, 12, 173, 174, 10, 133, 176, 192, 68, 39, 167, 90, 202, 64, 93, 51, 137, 132, 171, 22,
		110, 71, 185, 181, 238, 214, 85, 208, 51, 135, 65, 37, 203, 20, 167, 82, 196, 33, 31, 239, 118, 81, 179, 220, 79, 40, 184, 177, 53, 84, 48, 91, 154, 196, 52, 243, 153, 161, 139, 206, 58,
		84, 146, 253, 165, 204, 6, 66, 105, 228, 214, 48, 89, 59, 75, 69, 42, 81, 56, 48, 147, 96, 97, 94, 246, 33, 112, 67, 68, 13, 168, 161, 84, 225, 215, 38, 80, 60, 171, 78, 118, 142, 46, 56,
		115, 105, 166, 42, 27, 57, 6, 152, 4, 1, 94, 22, 189, 61, 242, 86, 93, 217, 168, 33, 17, 102, 150, 245, 142, 210, 88, 159, 12, 217, 139, 71, 200, 36, 78, 226, 142, 120, 210, 28, 123, 227,
		50, 191, 101, 24, 104, 169, 145, 46, 72, 172, 202, 196, 26, 98, 182, 194, 132, 186, 45, 104, 23, 132, 106, 105, 43, 157, 165, 64, 125, 185, 129, 56, 179, 57, 121, 68, 151, 236, 146, 122,
		50, 122, 133, 164, 160, 182, 111, 0, 205, 147, 122, 84, 128, 35, 128, 221, 5, 30, 145, 184, 112, 15, 147, 115, 153, 8, 118, 4, 182, 161, 80, 147, 96, 70, 11, 29, 115, 251, 184, 234, 212,
		114, 29, 104, 185, 180, 186, 171, 150, 92, 37, 211, 11, 177, 223, 161, 140, 99, 120, 27, 175, 75, 148, 167, 152, 36, 191, 152, 62, 139, 41, 114, 56, 212, 142, 194, 116, 141, 139, 224,
		109, 202, 166, 197, 83, 21, 116, 97, 98, 37, 158, 219, 61, 195, 57, 53, 71, 32, 154, 155, 123, 147, 66, 44, 173, 69, 123, 101, 71, 107, 7, 197, 215, 14, 152, 160, 98, 204, 106, 141, 140,
		241, 176, 23, 64, 9, 112, 153, 1, 63, 9, 29, 235, 224, 137, 93, 182, 39, 131, 21, 14, 202, 166, 150, 207, 23, 207, 146, 228, 38, 87, 236, 159, 250, 98, 175, 199, 67, 50, 5, 118, 88, 128,
		231, 148, 104, 151, 118, 107, 231, 30, 79, 44, 12, 95, 2, 110, 39, 242, 91, 46, 83, 157, 13, 135, 133, 78, 154, 91, 122, 76, 126, 155, 169, 205, 63, 52, 154, 150, 178, 184, 250, 103, 80,
		184, 67, 102, 152, 227, 59, 170, 83, 70, 188, 27, 50, 208, 16, 191, 238, 66, 134, 8, 108, 17, 222, 161, 198, 180, 149, 8, 228, 163, 109, 251, 181, 105, 102, 243, 90, 191, 50, 116, 92,
		103, 74, 185, 153, 105, 155, 129, 52, 228, 67, 23, 227, 133, 15, 244, 236, 30, 176, 112, 85, 88, 49, 199, 227, 82, 183, 113, 121, 135, 137, 224, 145, 189, 231, 118, 72, 244, 77, 101, 53,
		154, 137, 163, 189, 165, 165, 83, 108, 154, 183, 139, 186, 37, 70, 167, 0, 255, 11, 202, 126, 88, 186, 175, 102, 185, 224, 50, 150, 229, 199, 51, 206, 211, 111, 88, 209, 171, 63, 124,
		192, 91, 193, 112, 149, 183, 31, 183, 65, 112, 14, 131, 152, 181, 169, 49, 41, 242, 151, 87, 32, 198, 32, 50, 149, 168, 70, 142, 171, 160, 181, 78, 247, 103, 13, 104, 72, 177, 80, 24,
		241, 150, 200, 24, 130, 24, 194, 117, 148, 4, 68, 51, 2, 198, 188, 30, 55, 44, 255, 151, 125, 138, 128, 193, 237, 119, 12, 138, 22, 108, 230, 201, 152, 212, 216, 118, 188, 86, 96, 222,
		24, 18, 76, 56, 51, 235, 105, 55, 195, 38, 176, 94, 177, 22, 9, 135, 11, 254, 149, 192, 95, 230, 26, 249, 217, 75, 64, 117, 11, 142, 66, 83, 70, 118, 71, 122, 171, 148, 193, 138, 81,
		180, 219, 111, 92, 168, 113, 13, 34, 187, 70, 211, 170, 109, 150, 158, 166, 11, 108, 13, 185, 106, 235, 67, 185, 107, 98, 62, 245, 202, 73, 7, 168, 92, 112, 219, 45, 202, 60, 197, 45,
		10, 194, 45, 50, 51, 171, 12, 200, 124, 192, 44, 226, 124, 90, 194, 179, 185, 12, 226, 139, 49, 216, 206, 59, 181, 205, 3, 131, 136, 179, 81, 120, 27, 51, 97, 199, 213, 196, 22, 82,
		62, 13, 160, 99, 3, 228, 99, 251, 91, 118, 200, 144, 40, 126, 197, 130, 125, 202, 153, 16, 144, 184, 87, 97, 173, 91, 1, 141, 177, 12, 34, 190, 128, 123, 162, 146, 45, 155, 128, 70,
		130, 139, 153, 240, 177, 68, 144, 192, 138, 149, 43, 85, 251, 217, 198, 181, 97, 21, 124, 153, 155, 61, 155, 8, 189, 154, 42, 95, 33, 203, 64, 21, 207, 250, 155, 158, 97, 69, 169,
		67, 49, 23, 216, 165, 108, 180, 11, 79, 32, 234, 45, 248, 166, 189, 224, 76, 130, 183, 107, 66, 199, 34, 106, 35, 247, 33, 204, 67, 153, 195, 177, 147, 130, 104, 152, 67, 201, 4,
		60, 145, 64, 61, 116, 170, 143, 196, 3, 45, 214, 93, 228, 133, 203, 143, 197, 41, 155, 226, 124, 138, 140, 135, 254, 131, 1, 9, 146, 124, 152, 171, 34, 100, 185, 175, 24, 163, 178,
		157, 102, 12, 226, 212, 180, 106, 7, 208, 199, 150, 98, 150, 192, 164, 203, 123, 27, 166, 57, 175, 64, 218, 104, 90, 169, 144, 101, 69, 193, 118, 87, 44, 180, 21, 19, 153, 69, 89,
		157, 241, 11, 166, 90, 164, 146, 130, 193, 166, 54, 133, 91, 105, 41, 110, 199, 6, 91, 23, 55, 76, 161, 57, 218, 81, 11, 39, 64, 195, 183, 76, 158, 170, 188, 0, 112, 220, 174, 177,
		40, 84, 63, 107, 196, 100, 178, 187, 25, 108, 96, 14, 122, 150, 216, 227, 117, 20, 55, 60, 161, 20, 178, 30, 122, 169, 69, 50, 29, 14, 68, 116, 194, 225, 201, 77, 212, 155, 70, 71,
		190, 57, 119, 90, 111, 134, 117, 235, 235, 36, 217, 251, 76, 219, 209, 181, 208, 247, 172, 104, 35, 4, 5, 140, 15, 227, 1, 204, 87, 211, 62, 107, 42, 190, 189, 87, 32, 207, 52, 206,
		200, 241, 124, 91, 34, 202, 148, 4, 100, 56, 252, 148, 129, 137, 162, 143, 53, 140, 2, 128, 152, 151, 59, 125, 53, 217, 86, 185, 18, 82, 208, 39, 46, 73, 147, 83, 7, 24, 36, 166, 5,
		77, 127, 186, 137, 27, 5, 20, 36, 161, 19, 132, 69, 76, 167, 210, 133, 128, 28, 189, 86, 35, 175, 71, 215, 90, 169, 212, 16, 243, 229, 39, 178, 34, 8, 216, 81, 104, 132, 184, 16,
		138, 10, 166, 190, 114, 117, 237, 7, 31, 199, 20, 55, 176, 69, 80, 183, 185, 119, 120, 8, 197, 145, 211, 21, 155, 91, 65, 156, 246, 58, 153, 122, 198, 118, 99, 25, 173, 180, 83, 11,
		225, 38, 51, 204, 105, 83, 153, 174, 60, 67, 92, 135, 208, 122, 14, 54, 38, 232, 12, 42, 35, 40, 141, 46, 100, 91, 144, 71, 74, 254, 186, 199, 61, 167, 175, 77, 86, 205, 95, 80, 146,
		23, 44, 82, 180, 16, 8, 35, 121, 87, 202, 196, 192, 36, 29, 134, 80, 204, 108, 224, 179, 141, 204, 204, 251, 146, 161, 162, 120, 164, 208, 28, 14, 196, 9, 19}
	*/
	//========================================================================================//
	// SERVER SIDE PROTOCOL TEST 2
	//========================================================================================//
	// open plaintext data file and read into byte array
	PLAINTEXT, err := ioutil.ReadFile("../data/plaintext.txt")
	if err != nil {
		fmt.Print(err)
	}
	// encrypt plaintext data with master key
	CIPHERTEXT := AES256GCM_ENCRYPT(MASTER_KEY, PLAINTEXT)
	// save ciphertext data to file as base64 string
	outfile, err := os.Create("../data/ciphertext.txt")
	if err != nil {
		log.Fatal(err)
	}
	defer outfile.Close()
	// bytes to base64
	CIPHERTEXT_base64 := base64.StdEncoding.EncodeToString(CIPHERTEXT)
	_, err1 := outfile.WriteString(CIPHERTEXT_base64)
	if err1 != nil {
		log.Fatal(err1)
	}
	//========================================================================================//
	// STEP 2: SESSION KEY DECAPSULATION
	//========================================================================================//
	// read c values from client into array
	c_base64_array := make([]string, 0)
	// open client_c.txt file
	file, err := os.Open("../data/client_c.txt")
	if err != nil {
		log.Fatal(err)
	}
	defer file.Close()
	// read base64 strings into array
	scanner := bufio.NewScanner(file)
	scanner.Split(bufio.ScanWords)
	for scanner.Scan() {
		c_base64 := scanner.Text()
		c_base64_array = append(c_base64_array, c_base64)
	}
	if err := scanner.Err(); err != nil {
		log.Fatal(err)
	}
	// for each c value from client (100 values)
	time_sum2 := 0
	SESSION_KEY_base64_array := make([]string, 0)
	for i := 0; i < 100; i++ { // average of 100 test runs

		// start timer
		start := time.Now()

		//-------------------------------------------------------
		// get c from c_base64_array and convert to byte array
		c_byte, _ := base64.StdEncoding.DecodeString(c_base64_array[i])
		var c [1568]byte
		copy(c[:], c_byte)
		// 2. (Session) Key Decapsulation
		SESSION_KEY, _ := kyberk2so.KemDecrypt1024(c, SECRET_KEY)
		// convert session key to base64 string
		SESSION_KEY_base64 := base64.StdEncoding.EncodeToString(SESSION_KEY[:])
		//-------------------------------------------------------

		// end timer
		time2 := time.Since(start)

		// add to time sum
		time_sum2 += int(time2.Microseconds()) // convert to microseconds

		// append to array
		SESSION_KEY_base64_array = append(SESSION_KEY_base64_array, SESSION_KEY_base64)
	}
	// calculate average time for step 2
	avg_time2 := float64(time_sum2) / 100.0
	fmt.Println("Average time step 2: ", avg_time2, " microseconds")

	// write session keys to server_ss.txt
	outfile2, err := os.Create("../data/server_ss.txt")
	if err != nil {
		log.Fatal(err)
	}
	defer outfile2.Close()
	// write to file
	for i := 0; i < 100; i++ {
		_, err1 := outfile2.WriteString(SESSION_KEY_base64_array[i] + "\n")
		if err1 != nil {
			log.Fatal(err1)
		}
	}

	time_sum3 := 0
	ENC_MASTER_KEY_base64_array := make([]string, 0)
	for i := 0; i < 100; i++ { // average of 100 test runs

		// start timer
		start := time.Now()

		//-------------------------------------------------------
		// decode session key into byte array
		SESSION_KEY_byte, _ := base64.StdEncoding.DecodeString(SESSION_KEY_base64_array[i])
		var SESSION_KEY [32]byte
		copy(SESSION_KEY[:], SESSION_KEY_byte)
		// 3. Encrypt MASTER_KEY with SESSION_KEY
		ENC_MASTER_KEY := AES256GCM_ENCRYPT(SESSION_KEY, MASTER_KEY[:])
		// convert ENC_MASTER_KEY to base64 string and append to array
		ENC_MASTER_KEY_base64 := base64.StdEncoding.EncodeToString(ENC_MASTER_KEY[:])
		//-------------------------------------------------------

		// end timer
		time3 := time.Since(start)

		// add to time sum
		time_sum3 += int(time3.Microseconds()) // convert to microseconds

		// append to array
		ENC_MASTER_KEY_base64_array = append(ENC_MASTER_KEY_base64_array, ENC_MASTER_KEY_base64)
	}
	// calculate average time for step 3
	avg_time3 := float64(time_sum3) / 100.0
	fmt.Println("Average time step 3: ", avg_time3, " microseconds")

	// add to text file (for client side testing)
	// open server_enc_mk.txt file
	file1, err1 := os.Create("../data/server_enc_mk.txt")
	if err1 != nil {
		log.Fatal(err1)
	}
	defer file1.Close()
	// write to file
	for i := 0; i < 100; i++ {
		_, err1 := file1.WriteString(ENC_MASTER_KEY_base64_array[i] + "\n")
		if err1 != nil {
			log.Fatal(err1)
		}
	}

}

// bytes as input and output
func AES256GCM_ENCRYPT(KEY [32]byte, PLAINTEXT []byte) []byte {

	block, err := aes.NewCipher(KEY[:])
	if err != nil {
		panic(err)
	}
	gcm, err := cipher.NewGCM(block)
	if err != nil {
		panic(err)
	}
	nonce := make([]byte, gcm.NonceSize())
	_, err = io.ReadFull(rand.Reader, nonce)
	if err != nil {
		panic(err)
	}
	CIPHERTEXT := gcm.Seal(nonce, nonce, []byte(PLAINTEXT), nil)

	return CIPHERTEXT
}
